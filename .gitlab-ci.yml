# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build_1:
  tags:
    - ugrad
  stage: build
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  script:
    - cd problem1
    - if [ -f CMakeLists.txt ]; then cmake CMakeLists.txt; fi
    - make 
  artifacts:
    paths:
      - problem1/problem1
  allow_failure: true

build_2:
  tags:
    - ugrad
  stage: build
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  script:
    - cd problem2
    - if [ -f CMakeLists.txt ]; then cmake CMakeLists.txt; fi
    - make 
  artifacts:
    paths:
      - problem2/problem2
  allow_failure: true

build_3:
  tags:
    - ugrad
  stage: build
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  script:
    - cd problem3
    - if [ -f CMakeLists.txt ]; then cmake CMakeLists.txt; fi
    - make 
  artifacts:
    paths:
      - problem3/problem3
  allow_failure: true

test_00:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_1
  script:
    - cd problem1
    - ./tests/test.sh 00 . problem1

test_01:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_1
  script:
    - cd problem1
    - ./tests/test.sh 01 . problem1

test_02:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_1
  script:
    - cd problem1
    - ./tests/test.sh 02 . problem1

test_03:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_1
  script:
    - cd problem1
    - ./tests/test.sh 03 . problem1

test_04:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_1
  script:
    - cd problem1
    - ./tests/test.sh 04 . problem1

test_05:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_2
  script:
    - cd problem2
    - ./tests/test.sh 05 . problem2

test_06:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_2
  script:
    - cd problem2
    - ./tests/test.sh 06 . problem2

test_07:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_2
  script:
    - cd problem2
    - ./tests/test.sh 07 . problem2

test_08:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_2
  script:
    - cd problem2
    - ./tests/test.sh 08 . problem2

test_09:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_2
  script:
    - cd problem2
    - ./tests/test.sh 09 . problem2

test_10:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_3
  script:
    - cd problem3
    - ./tests/test.sh 10 . problem3

test_11:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_3
  script:
    - cd problem3
    - ./tests/test.sh 11 . problem3

test_12:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_3
  script:
    - cd problem3
    - ./tests/test.sh 12 . problem3

test_13:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_3
  script:
    - cd problem3
    - ./tests/test.sh 13 . problem3

test_14:
  tags:
    - ugrad
  stage: test
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /NOTEST/
  dependencies:
    - build_3
  script:
    - cd problem3
    - ./tests/test.sh 14 . problem3

