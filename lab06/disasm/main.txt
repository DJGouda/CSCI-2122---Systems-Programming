
main.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
				printf("Hello, World!\n");
   8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f <main+0xf>
   f:	48 89 c7             	mov    %rax,%rdi
  12:	e8 00 00 00 00       	call   17 <main+0x17>
				// printf("%d = %d * %d + %d\n", line(3, 4, 5), 3, 4, 5);
  17:	ba 05 00 00 00       	mov    $0x5,%edx
  1c:	be 04 00 00 00       	mov    $0x4,%esi
  21:	bf 03 00 00 00       	mov    $0x3,%edi
  26:	e8 00 00 00 00       	call   2b <main+0x2b>
  2b:	41 b8 05 00 00 00    	mov    $0x5,%r8d
  31:	b9 04 00 00 00       	mov    $0x4,%ecx
  36:	ba 03 00 00 00       	mov    $0x3,%edx
  3b:	89 c6                	mov    %eax,%esi
  3d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 44 <main+0x44>
  44:	48 89 c7             	mov    %rax,%rdi
  47:	b8 00 00 00 00       	mov    $0x0,%eax
  4c:	e8 00 00 00 00       	call   51 <main+0x51>
				// printf("%d = min(%d, %d)\n", min(4, 3), 4, 3);
  51:	be 03 00 00 00       	mov    $0x3,%esi
  56:	bf 04 00 00 00       	mov    $0x4,%edi
  5b:	e8 00 00 00 00       	call   60 <main+0x60>
  60:	b9 03 00 00 00       	mov    $0x3,%ecx
  65:	ba 04 00 00 00       	mov    $0x4,%edx
  6a:	89 c6                	mov    %eax,%esi
  6c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 73 <main+0x73>
  73:	48 89 c7             	mov    %rax,%rdi
  76:	b8 00 00 00 00       	mov    $0x0,%eax
  7b:	e8 00 00 00 00       	call   80 <main+0x80>
				// printf("%d = max3(%d,%d,%d)\n", max3(4, 3, 5), 4, 3, 5);

  80:	ba 05 00 00 00       	mov    $0x5,%edx
  85:	be 03 00 00 00       	mov    $0x3,%esi
  8a:	bf 04 00 00 00       	mov    $0x4,%edi
  8f:	e8 00 00 00 00       	call   94 <main+0x94>
  94:	41 b8 05 00 00 00    	mov    $0x5,%r8d
  9a:	b9 03 00 00 00       	mov    $0x3,%ecx
  9f:	ba 04 00 00 00       	mov    $0x4,%edx
  a4:	89 c6                	mov    %eax,%esi
  a6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ad <main+0xad>
  ad:	48 89 c7             	mov    %rax,%rdi
  b0:	b8 00 00 00 00       	mov    $0x0,%eax
  b5:	e8 00 00 00 00       	call   ba <main+0xba>
				// int data[] = {1, 3, 4, 5, 6};
  ba:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
  c1:	c7 45 e4 03 00 00 00 	movl   $0x3,-0x1c(%rbp)
  c8:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%rbp)
  cf:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%rbp)
  d6:	c7 45 f0 06 00 00 00 	movl   $0x6,-0x10(%rbp)
				// printf("%d = sum\n", sum(data, 5));
  dd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  e1:	be 05 00 00 00       	mov    $0x5,%esi
  e6:	48 89 c7             	mov    %rax,%rdi
  e9:	e8 00 00 00 00       	call   ee <main+0xee>
  ee:	89 c6                	mov    %eax,%esi
  f0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f7 <main+0xf7>
  f7:	48 89 c7             	mov    %rax,%rdi
				// return 0;
  fa:	b8 00 00 00 00       	mov    $0x0,%eax
  ff:	e8 00 00 00 00       	call   104 <main+0x104>
 104:	b8 00 00 00 00       	mov    $0x0,%eax
 109:	c9                   	leave
 10a:	c3                   	ret
